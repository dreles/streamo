{"ast":null,"code":"import _classCallCheck from \"/Users/andreleslie/Desktop/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andreleslie/Desktop/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andreleslie/Desktop/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andreleslie/Desktop/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andreleslie/Desktop/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andreleslie/Desktop/streams/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      editStream(_this.props.stream.id, formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('stream', this.props);\n\n      if (this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Stream Edit\"), React.createElement(StreamForm, {\n          initialValues: {\n            title: this.props.stream.title,\n            description: this.props.stream.description\n          },\n          onSubmit: this.onSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  editStream: editStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/andreleslie/Desktop/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","onSubmit","formValues","props","stream","id","match","params","console","log","title","description","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAsC,eAAtC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAGMC,U;;;;;;;;;;;;;;;;;;UAQLC,Q,GAAW,UAACC,UAAD,EAAgB;AAC1BJ,MAAAA,UAAU,CAAC,MAAKK,KAAL,CAAWC,MAAX,CAAkBC,EAAnB,EAAuBH,UAAvB,CAAV;AAEA,K;;;;;;;wCATkB;AAElB,WAAKC,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EAA/C;AAEA;;;6BAOO;AACPG,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKN,KAA3B;;AACA,UAAG,KAAKA,KAAL,CAAWC,MAAd,EAAqB;AAEpB,eACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,EAEC,oBAAC,UAAD;AAAY,UAAA,aAAa,EAAE;AAACM,YAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,MAAX,CAAkBM,KAA1B;AAAiCC,YAAAA,WAAW,EAAE,KAAKR,KAAL,CAAWC,MAAX,CAAkBO;AAAhE,WAA3B;AAAyG,UAAA,QAAQ,EAAE,KAAKV,QAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD,CADD;AAMA,OARD,MASI;AACH,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;AAGD;;;;EA7BuBN,KAAK,CAACiB,S;;AAiC/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAE5C,SAAO;AAACX,IAAAA,MAAM,EAAEU,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBF,EAApC;AAAT,GAAP;AACA,CAHD;;AAKA,eAAeT,OAAO,CAACiB,eAAD,EAAkB;AAAChB,EAAAA,WAAW,EAAXA,WAAD;AAAaC,EAAAA,UAAU,EAAVA;AAAb,CAAlB,CAAP,CAAmDE,UAAnD,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {fetchStream, editStream} from '../../actions'\nimport StreamForm from './StreamForm'\n\n\nclass StreamEdit extends React.Component {\n\n\tcomponentDidMount(){ \n\t\t\n\t\tthis.props.fetchStream(this.props.match.params.id);\n\n\t}\n\n\tonSubmit = (formValues) => { \n\t\teditStream(this.props.stream.id, formValues)\n\n\t}\n\t\n\trender(){ \n\t\tconsole.log('stream', this.props)\n\t\tif(this.props.stream){\n\n\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Stream Edit</h3>\n\t\t\t\t\t<StreamForm initialValues={{title: this.props.stream.title, description: this.props.stream.description}} onSubmit={this.onSubmit} />  \n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\telse{\n\t\t\treturn(<div></div>)\n\t\t}\n\n\t\t\n\t}\n\t\n}\n\nconst mapStateToProps = (state, ownProps) => { \n\n\treturn {stream: state.streams[ownProps.match.params.id]}\n}\n\nexport default connect(mapStateToProps, {fetchStream,editStream})(StreamEdit); "]},"metadata":{},"sourceType":"module"}