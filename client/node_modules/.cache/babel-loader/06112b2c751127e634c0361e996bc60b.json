{"ast":null,"code":"import _classCallCheck from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andreleslie/Desktop/streamo/client/src/components/streams/StreamForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar StreamForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamForm, _React$Component);\n\n  function StreamForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderInput = function (formProps) {\n      return React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Enter \", formProps.input.name), React.createElement(\"input\", Object.assign({}, formProps.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })), _this.errorDisplay(formProps.meta));\n    };\n\n    _this.onSubmit = function (formValues) {\n      _this.props.onSubmit(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamForm, [{\n    key: \"errorDisplay\",\n    value: function errorDisplay(meta) {\n      console.log(meta);\n\n      if (meta.error && meta.touched) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, meta.error));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return StreamForm;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'you must enter a title';\n  }\n\n  if (!formValues.descripton) {\n    errors.descripton = 'you must enter a description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  validate: validate,\n  form: 'streamForm'\n})(StreamForm);","map":{"version":3,"sources":["/Users/andreleslie/Desktop/streamo/client/src/components/streams/StreamForm.js"],"names":["React","Field","reduxForm","StreamForm","renderInput","formProps","input","name","errorDisplay","meta","onSubmit","formValues","props","console","log","error","touched","handleSubmit","Component","validate","errors","title","descripton","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;;IAEMC,U;;;;;;;;;;;;;;;;;;UAeLC,W,GAAc,UAACC,SAAD,EAAe;AAG5B,aACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcA,SAAS,CAACC,KAAV,CAAgBC,IAA9B,CADD,EAEC,+CAAWF,SAAS,CAACC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFD,EAGE,MAAKE,YAAL,CAAkBH,SAAS,CAACI,IAA5B,CAHF,CADD;AAQA,K;;UAEDC,Q,GAAW,UAACC,UAAD,EAAgB;AAC1B,YAAKC,KAAL,CAAWF,QAAX,CAAoBC,UAApB;AACA,K;;;;;;;iCA5BYF,I,EAAK;AACjBI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,UAAGA,IAAI,CAACM,KAAL,IAAcN,IAAI,CAACO,OAAtB,EAA8B;AAC7B,eACC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBP,IAAI,CAACM,KAA9B,CADD,CADD;AAKA;;AAED,aAAO,IAAP;AACA;;;6BAmBQ;AAER,aACC;AAAM,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWK,YAAX,CAAwB,KAAKP,QAA7B,CAAhB;AAAwD,QAAA,SAAS,EAAC,eAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAE,KAAKN,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAE,KAAKA,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAGC;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD,CADD;AAOA;;;;EAzCuBJ,KAAK,CAACkB,S;;AA6C/B,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACR,UAAD,EAAgB;AAChC,MAAMS,MAAM,GAAG,EAAf;;AACA,MAAG,CAACT,UAAU,CAACU,KAAf,EAAqB;AACpBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACA;;AAED,MAAG,CAACV,UAAU,CAACW,UAAf,EAA0B;AACzBF,IAAAA,MAAM,CAACE,UAAP,GAAoB,8BAApB;AACA;;AAED,SAAOF,MAAP;AACA,CAXD;;AAaA,eAAelB,SAAS,CAAC;AACxBiB,EAAAA,QAAQ,EAAEA,QADc;AAExBI,EAAAA,IAAI,EAAE;AAFkB,CAAD,CAAT,CAGZpB,UAHY,CAAf","sourcesContent":["import React from 'react'\nimport {Field, reduxForm} from 'redux-form'\n\nclass StreamForm extends React.Component{\n\n\terrorDisplay(meta){ \n\t\tconsole.log(meta)\n\t\tif(meta.error && meta.touched){ \n\t\t\treturn (\n\t\t\t\t<div className=\"ui error message\">\n\t\t\t\t\t<div className=\"header\">{meta.error}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} \n\n\t\treturn null\n\t} \n\n\trenderInput = (formProps) => { \n\n\n\t\treturn(\n\t\t\t<div className=\"field\">\n\t\t\t\t<label>Enter {formProps.input.name}</label>\n\t\t\t\t<input {...formProps.input}/>\n\t\t\t\t{this.errorDisplay(formProps.meta)}\n\t\t\t</div>\n\t\t\t\n\t\t); \n\t}\n\n\tonSubmit = (formValues) => { \n\t\tthis.props.onSubmit(formValues)\n\t}\n\n\trender() {\n\n\t\treturn(\n\t\t\t<form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n\t\t\t\t<Field name=\"title\" component={this.renderInput} /> \n\t\t\t\t<Field name=\"description\" component={this.renderInput} /> \n\t\t\t\t<button className=\"ui button primary\">Submit</button>\n\t\t\t</form>\n\t\t)\n\t}\n\n}\n\nconst validate = (formValues) => { \n\tconst errors = {} \n\tif(!formValues.title){ \n\t\terrors.title = 'you must enter a title'\n\t}\n\n\tif(!formValues.descripton){ \n\t\terrors.descripton = 'you must enter a description'\n\t}\n\n\treturn errors; \n}\n\nexport default reduxForm({\n\tvalidate: validate,\n\tform: 'streamForm'\n})(StreamForm); \n\n\n\n"]},"metadata":{},"sourceType":"module"}