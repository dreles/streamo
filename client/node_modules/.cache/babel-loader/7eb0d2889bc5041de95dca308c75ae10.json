{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andreleslie/Desktop/streams/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andreleslie/Desktop/streams/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return streams.post('/streams', formValues);\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStreams = function fetchStreams() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var reponse;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return streams.get('/streams');\n\n              case 2:\n                reponse = _context2.sent;\n                dispacth({\n                  type: FETCH_STREAMS,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStream = function fetchStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return streams.get('/streams/' + id);\n\n              case 2:\n                response = _context3.sent;\n                dispatch({});\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteStream = function deleteStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return streams.delete('streams/' + id);\n\n              case 2:\n                response = _context4.sent;\n                dispatch({\n                  type: DELETE_STREAM\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/andreleslie/Desktop/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","post","response","data","fetchStreams","get","reponse","dispacth","fetchStream","id","deleteStream","delete"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,EAA2BC,aAA3B,EAA0CC,aAA1C,EAAyDC,YAAzD,EAAuEC,aAAvE,EAAsFC,WAAtF,QAAwG,SAAxG;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAAY;AACjC,SAAO;AAACC,IAAAA,IAAI,EAAET,OAAP;AAAgBU,IAAAA,OAAO,EAAEF;AAAzB,GAAP;AAEA,CAHM;AAKP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC5B,SAAO;AAACF,IAAAA,IAAI,EAAER;AAAP,GAAP;AACA,CAFM;AAIP,OAAO,IAAMW,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAgB;AAC3C;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBf,OAAO,CAACgB,IAAR,CAAa,UAAb,EAAyBF,UAAzB,CADjB;;AAAA;AACAG,gBAAAA,QADA;AAGNF,gBAAAA,QAAQ,CAAC;AAACL,kBAAAA,IAAI,EAAEP,aAAP;AAAsBQ,kBAAAA,OAAO,EAAEM,QAAQ,CAACC;AAAxC,iBAAD,CAAR;;AAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,CANM;AAQP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACjC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAOJ,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACgBf,OAAO,CAACoB,GAAR,CAAY,UAAZ,CADhB;;AAAA;AACAC,gBAAAA,OADA;AAGNC,gBAAAA,QAAQ,CAAC;AAACZ,kBAAAA,IAAI,EAAEN,aAAP;AAAsBO,kBAAAA,OAAO,EAAEM,QAAQ,CAACC;AAAxC,iBAAD,CAAR;;AAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,CANM;AAQP,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,EAAD,EAAQ;AAClC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAOT,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBf,OAAO,CAACoB,GAAR,CAAY,cAAcI,EAA1B,CADjB;;AAAA;AACAP,gBAAAA,QADA;AAGNF,gBAAAA,QAAQ,CAAC,EAAD,CAAR;;AAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,CANM;AAQP,OAAO,IAAMU,YAAY,GAAG,SAAfA,YAAe,CAACD,EAAD,EAAQ;AACnC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAOT,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBf,OAAO,CAAC0B,MAAR,CAAe,aAAaF,EAA5B,CADjB;;AAAA;AACAP,gBAAAA,QADA;AAGNF,gBAAAA,QAAQ,CAAC;AAACL,kBAAAA,IAAI,EAAEJ;AAAP,iBAAD,CAAR;;AAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,CANM","sourcesContent":["import streams from '../apis/streams'\nimport {SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM} from './types'\n\nexport const signIn = (userId) => {\n\treturn {type: SIGN_IN, payload: userId}\n\t\n};\n\nexport const signOut = () => {\n\treturn {type: SIGN_OUT}\n}\n\nexport const createStream = (formValues) => {\n\treturn async (dispatch) => {\n\t\tconst response = await streams.post('/streams', formValues);\n\n\t\tdispatch({type: CREATE_STREAM, payload: response.data})\n\t}\n} \n\nexport const fetchStreams = () => { \n\treturn async (dispatch) => { \n\t\tconst reponse = await streams.get('/streams')\n\n\t\tdispacth({type: FETCH_STREAMS, payload: response.data})\n\t}\n} \n\nexport const fetchStream = (id) => {\n\treturn async (dispatch) => {\n\t\tconst response = await streams.get('/streams/' + id)\n\n\t\tdispatch({})\n\t}\n}\n\nexport const deleteStream = (id) => {\n\treturn async (dispatch) => { \n\t\tconst response = await streams.delete('streams/' + id)\n\n\t\tdispatch({type: DELETE_STREAM})\n\t}\n}"]},"metadata":{},"sourceType":"module"}