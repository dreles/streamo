{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andreleslie/Desktop/streamo/client/src/components/Comments.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../actions';\nimport streams from '../apis/streams';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Comments, _React$Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comments: [],\n      text: \"\"\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                data = {\n                  user: _this.props.user,\n                  content: _this.state.text,\n                  streamId: _this.props.stream.id\n                };\n                _context.next = 4;\n                return streams.post('/comments', data);\n\n              case 4:\n                _this.getComments();\n\n                _this.setState({\n                  text: \"\"\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.getComments();\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"renderComments\",\n    value: function renderComments() {\n      var _this2 = this;\n\n      console.log('this state comments', this.state.comments);\n      return this.state.comments.map(function (comment) {\n        if (comment.streamId === _this2.props.stream.id) {\n          return React.createElement(\"div\", {\n            key: comment.id,\n            className: \"item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, comment.user), comment.content), _this2.renderDelete(comment.user, comment.id));\n        } else {\n          return null;\n        }\n      });\n    }\n  }, {\n    key: \"renderDelete\",\n    value: function renderDelete(user, commentId) {\n      if (this.props.user === user) {\n        return React.createElement(\"div\", {\n          onClick: function onClick() {\n            console.log(\"you clicked delete\");\n          },\n          style: {\n            float: \"right\",\n            cursor: \"pointer\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"delete\");\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"deleteComment\",\n    value: function () {\n      var _deleteComment = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(commentId) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                streams.delete('/comments/' + commentId);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function deleteComment(_x2) {\n        return _deleteComment.apply(this, arguments);\n      }\n\n      return deleteComment;\n    }()\n  }, {\n    key: \"getComments\",\n    value: function () {\n      var _getComments = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var comments;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return streams.get('/comments/');\n\n              case 2:\n                comments = _context4.sent;\n                this.setState({\n                  comments: comments.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getComments() {\n        return _getComments.apply(this, arguments);\n      }\n\n      return getComments;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"ui segment\",\n        style: {\n          width: \"72.5%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui relaxed divided list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Chat\"), this.renderComments()), React.createElement(\"div\", {\n        className: \"ui divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ui search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"ui form\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.text,\n        onChange: function onChange(e) {\n          _this3.setState({\n            text: e.target.value\n          });\n        },\n        style: {\n          width: \"100%\"\n        },\n        className: \"prompt\",\n        type: \"text\",\n        placeholder: \"Add Comment...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Comments;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.signedIn.userId\n  };\n};\n\nexport default connect(mapStateToProps)(Comments);","map":{"version":3,"sources":["/Users/andreleslie/Desktop/streamo/client/src/components/Comments.js"],"names":["React","connect","fetchStream","streams","Comments","state","comments","text","onSubmit","e","preventDefault","data","user","props","content","streamId","stream","id","post","getComments","setState","console","log","map","comment","renderDelete","commentId","float","cursor","delete","get","width","renderComments","target","value","Component","mapStateToProps","signedIn","userId"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {fetchStream} from '../actions'\nimport streams from '../apis/streams'\n\n\nclass Comments extends React.Component {\n\tstate = {comments: [], text: \"\"} \n\n\tasync componentDidMount(){ \n\t\tthis.getComments()\n\t}\n\n\trenderComments(){\n\t\tconsole.log('this state comments', this.state.comments)\n\t\treturn(\n\n\t\t\tthis.state.comments.map((comment) => { \n\t\t\t\tif(comment.streamId === this.props.stream.id){\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div key={comment.id} className=\"item\">\n\t\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t    <div className=\"header\">{comment.user}</div>\n\t\t\t\t\t\t\t    {comment.content}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{this.renderDelete(comment.user, comment.id)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}else{\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t})\n\n\t\t);\n\t}\n\n\trenderDelete(user, commentId){\n\n\t\tif(this.props.user === user){\n\t\t\treturn(\n\t\t\t\t<div onClick={() => {console.log(\"you clicked delete\")}} style={{float: \"right\", cursor: \"pointer\"}}>delete</div>\n\t\t\t);\n\t\t\t\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tasync deleteComment(commentId){\n\t\tstreams.delete('/comments/' + commentId)\n\t}\n\n\tonSubmit = async (e) => { \n\t\te.preventDefault()\n\t\tconst data = {\n\t\t\tuser: this.props.user,\n\t\t\tcontent: this.state.text,\n\t\t\tstreamId: this.props.stream.id\n\t\t}\n\n\t\tawait streams.post('/comments', data)\n\t\tthis.getComments()\n\t\tthis.setState({text: \"\"})\n\n\t}\n\n\tasync getComments(){\n\t\tconst comments = await streams.get('/comments/') \n\t\tthis.setState({comments: comments.data})\n\t}\n\n\n\trender(){ \n\t\t\t\n\t\t\treturn(\n\n\t\t\t\t<div className=\"ui segment\" style={{width: \"72.5%\"}}>\n\t\t\t\t\t<div className=\"ui relaxed divided list\">\n\t\t\t\t\t\t<h5>Chat</h5>\n\t\t\t\t\t\t{this.renderComments()} \n\t\t    \t\t</div>\n\t\t    \t\t<div className=\"ui divider\"></div>\n\t\t    \t\t<div className=\"ui search\">\n\t\t    \t\t\t<form className=\"ui form\" onSubmit={this.onSubmit}>\n\t\t    \t\t\t\t<input value={this.state.text} onChange={(e) => {this.setState({text: e.target.value})}} style={{width: \"100%\"}} className=\"prompt\" type=\"text\" placeholder=\"Add Comment...\"/>\n\t\t    \t\t\t</form>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t\n\n\n\t}\n\n\t\n}\n\nconst mapStateToProps = (state) => {\n\treturn ({user: state.signedIn.userId}); \n}\n\n\nexport default connect(mapStateToProps)(Comments);\n\n"]},"metadata":{},"sourceType":"module"}