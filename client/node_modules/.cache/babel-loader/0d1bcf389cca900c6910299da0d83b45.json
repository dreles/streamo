{"ast":null,"code":"import _classCallCheck from \"/Users/andreleslie/Desktop/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andreleslie/Desktop/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andreleslie/Desktop/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andreleslie/Desktop/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andreleslie/Desktop/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andreleslie/Desktop/streams/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nimport flv from 'flv.js';\n\nvar StreamShow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamShow, _React$Component);\n\n  function StreamShow(props) {\n    var _this;\n\n    _classCallCheck(this, StreamShow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StreamShow).call(this, props));\n    _this.videoRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(StreamShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n      this.player = flv.createPlayer({\n        type: 'flv',\n        url: \"http://localhost:8000/live/\".concat(this.props.match.params.id, \".flv\")\n      });\n      this.player.attachMediaElement(this.videoRef.current);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"Loading . . .\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"video\", {\n          ref: this.videoRef,\n          style: {\n            width: \"100%\"\n          },\n          controls: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, this.props.stream.title), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, this.props.stream.description));\n      }\n    }\n  }]);\n\n  return StreamShow;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/andreleslie/Desktop/streams/client/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","flv","StreamShow","props","videoRef","createRef","match","params","id","player","createPlayer","type","url","attachMediaElement","current","console","log","stream","width","title","description","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,OAAOC,GAAP,MAAgB,QAAhB;;IAEMC,U;;;;;AAEL,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AAEA,UAAKC,QAAL,GAAgBN,KAAK,CAACO,SAAN,EAAhB;AAHiB;AAIjB;;;;wCAEkB;AAClB,WAAKF,KAAL,CAAWH,WAAX,CAAuB,KAAKG,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACA,WAAKC,MAAL,GAAcR,GAAG,CAACS,YAAJ,CAAiB;AAC9BC,QAAAA,IAAI,EAAE,KADwB;AAE9BC,QAAAA,GAAG,uCAAgC,KAAKT,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxD;AAF2B,OAAjB,CAAd;AAIA,WAAKC,MAAL,CAAYI,kBAAZ,CAA+B,KAAKT,QAAL,CAAcU,OAA7C;AACA;;;6BAKO;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;;AACA,UAAG,CAAC,KAAKA,KAAL,CAAWc,MAAf,EAAsB;AACrB,eACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD;AAGA,OAJD,MAKI;AACH,eACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAO,UAAA,GAAG,EAAE,KAAKb,QAAjB;AAA2B,UAAA,KAAK,EAAE;AAACc,YAAAA,KAAK,EAAE;AAAR,WAAlC;AAAmD,UAAA,QAAQ,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKf,KAAL,CAAWc,MAAX,CAAkBE,KAAvB,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKhB,KAAL,CAAWc,MAAX,CAAkBG,WAAvB,CAHD,CADD;AAQA;AAED;;;;EAtCuBtB,KAAK,CAACuB,S;;AA0C/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC5C,SAAO;AACNP,IAAAA,MAAM,EAAEM,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAAClB,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADF,GAAP;AAGA,CAJD;;AAMA,eAAeT,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA,WAAW,EAAXA;AAAD,CAAlB,CAAP,CAAwCE,UAAxC,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {fetchStream} from '../../actions'\nimport flv from 'flv.js'\n\nclass StreamShow extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props)\n\n\t\tthis.videoRef = React.createRef()\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.props.fetchStream(this.props.match.params.id) \n\t\tthis.player = flv.createPlayer({\n\t\t\ttype: 'flv',\n\t\t\turl: `http://localhost:8000/live/${this.props.match.params.id}.flv`\n\t\t})\n\t\tthis.player.attachMediaElement(this.videoRef.current)\n\t}\n\n\t\n\n\n\trender(){ \n\t\tconsole.log(this.props)\n\t\tif(!this.props.stream){\n\t\t\treturn(\n\t\t\t\t<div>Loading . . .</div>\n\t\t\t)\n\t\t}\n\t\telse{ \n\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t<video ref={this.videoRef} style={{width: \"100%\"}} controls=\"true\"></video>\n\t\t\t\t\t<h1>{this.props.stream.title}</h1>\n\t\t\t\t\t<h5>{this.props.stream.description}</h5>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\tstream: state.streams[ownProps.match.params.id]\n\t}\n}\n\nexport default connect(mapStateToProps, {fetchStream})(StreamShow); "]},"metadata":{},"sourceType":"module"}