{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andreleslie/Desktop/streamo/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andreleslie/Desktop/streamo/client/src/components/Comments.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../actions';\nimport streams from '../apis/streams';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Comments, _React$Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comments: []\n    };\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var comments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return streams.get('/comments/');\n\n              case 2:\n                comments = _context.sent;\n                this.setState({\n                  comments: comments.data\n                });\n                console.log(this.state.comments);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"renderComments\",\n    value: function renderComments() {\n      var _this2 = this;\n\n      return this.comments.map(function (comment) {\n        if (comment.streamId === _this2.props.stream.id) {\n          return React.createElement(\"div\", {\n            className: \"item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, comment.user), comment.content));\n        } else {\n          return null;\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.comments);\n\n      if (this.state.comments) {\n        return React.createElement(\"div\", {\n          className: \"ui segment\",\n          style: {\n            width: \"72.5%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ui relaxed divided list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Chat\"), this.renderComments));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Loading . . .\");\n      }\n    }\n  }]);\n\n  return Comments;\n}(React.Component);\n\nexport default connect()(Comments);","map":{"version":3,"sources":["/Users/andreleslie/Desktop/streamo/client/src/components/Comments.js"],"names":["React","connect","fetchStream","streams","Comments","state","comments","get","setState","data","console","log","map","comment","streamId","props","stream","id","user","content","width","renderComments","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,YAA1B;AACA,OAAOC,OAAP,MAAoB,iBAApB;;IAGMC,Q;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AAACC,MAAAA,QAAQ,EAAE;AAAX,K;;;;;;;;;;;;;;;;uBAEgBH,OAAO,CAACI,GAAR,CAAY,YAAZ,C;;;AAAjBD,gBAAAA,Q;AACN,qBAAKE,QAAL,CAAc;AAACF,kBAAAA,QAAQ,EAAEA,QAAQ,CAACG;AAApB,iBAAd;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,QAAvB;;;;;;;;;;;;;;;;;;qCAIe;AAAA;;AACf,aAEC,KAAKA,QAAL,CAAcM,GAAd,CAAkB,UAACC,OAAD,EAAa;AAC9B,YAAGA,OAAO,CAACC,QAAR,KAAqB,MAAI,CAACC,KAAL,CAAWC,MAAX,CAAkBC,EAA1C,EAA6C;AAC5C,iBACC;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyBJ,OAAO,CAACK,IAAjC,CADJ,EAEKL,OAAO,CAACM,OAFb,CADD,CADD;AAQA,SATD,MAUI;AACH,iBAAO,IAAP;AACA;AACD,OAdD,CAFD;AAmBA;;;6BAGO;AACPT,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,QAAjB;;AACA,UAAG,KAAKD,KAAL,CAAWC,QAAd,EAAuB;AACtB,eACC;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,KAAK,EAAE;AAACc,YAAAA,KAAK,EAAE;AAAR,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAEE,KAAKC,cAFP,CADD,CADD;AASA,OAVD,MAWI;AACH,eACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD;AAGA;AAGD;;;;EApDqBrB,KAAK,CAACsB,S;;AAyD7B,eAAerB,OAAO,GAAGG,QAAH,CAAtB","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {fetchStream} from '../actions'\nimport streams from '../apis/streams'\n\n\nclass Comments extends React.Component {\n\tstate = {comments: []} \n\tasync componentDidMount(){ \n\t\tconst comments = await streams.get('/comments/') \n\t\tthis.setState({comments: comments.data})\n\t\tconsole.log(this.state.comments)\n\n\t}\n\n\trenderComments(){\n\t\treturn(\n\n\t\t\tthis.comments.map((comment) => { \n\t\t\t\tif(comment.streamId === this.props.stream.id){\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div className=\"item\">\n\t\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t    <div className=\"header\">{comment.user}</div>\n\t\t\t\t\t\t\t    {comment.content}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t})\n\n\t\t);\n\t}\n\n\n\trender(){ \n\t\tconsole.log(this.comments)\n\t\tif(this.state.comments){\n\t\t\treturn(\n\t\t\t\t<div className=\"ui segment\" style={{width: \"72.5%\"}}>\n\t\t\t\t\t<div className=\"ui relaxed divided list\">\n\t\t\t\t\t\t<h5>Chat</h5>\n\t\t\t\t\t\t{this.renderComments} \n\t\t    \t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t}\n\t\telse{\n\t\t\treturn(\n\t\t\t\t<div>Loading . . .</div>\n\t\t\t);\n\t\t}\n\n\n\t}\n\n\t\n}\n\nexport default connect()(Comments);"]},"metadata":{},"sourceType":"module"}